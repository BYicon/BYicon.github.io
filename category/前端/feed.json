{
    "version": "https://jsonfeed.org/version/1",
    "title": "ioby-blog • All posts by \"前端\" category",
    "description": "",
    "home_page_url": "https://byicon.github.io",
    "items": [
        {
            "id": "https://byicon.github.io/2020/06/03/web/web/",
            "url": "https://byicon.github.io/2020/06/03/web/web/",
            "title": "前端工程化",
            "date_published": "2020-06-03T13:12:48.000Z",
            "content_html": "<h1 id=\"前端工程化历史\"><a class=\"markdownIt-Anchor\" href=\"#前端工程化历史\">#</a> 前端工程化历史：</h1>\n<ol>\n<li>\n<p>javascrip 诞生到 ajax 出现前 ： 前后端不分离，服务端渲染，js 仅用于处理页面交互；</p>\n</li>\n<li>\n<p>ajax 出现后：前后端分离；</p>\n</li>\n<li>\n<p>v8 引擎发布后：意味着 js 可以脱离浏览器；</p>\n</li>\n<li>\n<p>之后发布 nodejs，npm，webpack 前端模块化；</p>\n</li>\n<li>\n<p>react  vue 发布，前端进入了 mvvm + 模块化时代。</p>\n</li>\n</ol>\n<h1 id=\"前端工程化解决了什么问题\"><a class=\"markdownIt-Anchor\" href=\"#前端工程化解决了什么问题\">#</a> 前端工程化解决了什么问题？</h1>\n<ol>\n<li>\n<p>解决全局命名冲突；   模块化；</p>\n</li>\n<li>\n<p>编码规范； eslint；</p>\n</li>\n<li>\n<p>使用最新 es 规范，babel；</p>\n</li>\n<li>\n<p>资源合并压缩。</p>\n</li>\n</ol>\n<p><strong>总结： 提升前端开发效率，开发规范，访问性能等。</strong></p>\n",
            "tags": [
                "前端"
            ]
        }
    ]
}